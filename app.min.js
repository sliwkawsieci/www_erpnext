let currentPage = 'home'; document.addEventListener('DOMContentLoaded', function() { console.log('DOM loaded, initializing app...'); initializeApp(); setupFormValidation(); setupMobileNavigation(); setupNavigationHandlers(); setupFAQHandlers(); setupExternalLinks(); console.log('App initialization complete'); }); function initializeApp() { checkUrlHash(); if (!window.location.hash || !document.getElementById('page-' + window.location.hash.substring(1))) { showPage('home'); } } function setupNavigationHandlers() { console.log('Setting up navigation handlers...'); const navLinks = document.querySelectorAll('.nav-link[data-page]'); console.log('Found nav links:', navLinks.length); navLinks.forEach(function(link) { link.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); const pageId = this.getAttribute('data-page'); console.log('Nav link clicked:', pageId); if (pageId) { showPage(pageId); } }); }); const logoLink = document.querySelector('.nav-logo a'); if (logoLink) { logoLink.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); console.log('Logo clicked'); showPage('home'); }); } const productButtons = document.querySelectorAll('button[data-page]'); console.log('Found product buttons:', productButtons.length); productButtons.forEach(function(button) { button.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); const pageId = this.getAttribute('data-page'); console.log('Product button clicked:', pageId); if (pageId) { showPage(pageId); } }); }); const contactButtons = document.querySelectorAll('[data-action="contact"]'); console.log('Found contact buttons:', contactButtons.length); contactButtons.forEach(function(button) { button.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); console.log('Contact button clicked'); scrollToContact(); }); }); } function setupExternalLinks() { const externalLinks = document.querySelectorAll('a[href^="http"]'); externalLinks.forEach(function(link) { if (!link.getAttribute('target')) { link.setAttribute('target', '_blank'); link.setAttribute('rel', 'noopener noreferrer'); } }); } function setupFAQHandlers() { console.log('Setting up FAQ handlers...'); const faqQuestions = document.querySelectorAll('.faq-question'); console.log('Found FAQ questions:', faqQuestions.length); faqQuestions.forEach(function(question) { question.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); console.log('FAQ question clicked'); const faqItem = this.parentElement; const faqAnswer = faqItem.querySelector('.faq-answer'); const isActive = this.classList.contains('active'); faqQuestions.forEach(function(otherQuestion) { const otherItem = otherQuestion.parentElement; const otherAnswer = otherItem.querySelector('.faq-answer'); otherQuestion.classList.remove('active'); otherAnswer.classList.remove('active'); }); if (!isActive) { this.classList.add('active'); faqAnswer.classList.add('active'); } }); }); } function showPage(pageId) { console.log('Switching to page:', pageId); const validPages = ['home', 'erpnext', 'crm', 'helpdesk']; if (!validPages.includes(pageId)) { console.error('Invalid page ID:', pageId); return; } const allPages = document.querySelectorAll('.page-content'); console.log('Found pages:', allPages.length); allPages.forEach(function(page) { page.classList.add('hidden'); page.style.display = 'none'; }); const targetPage = document.getElementById('page-' + pageId); if (targetPage) { targetPage.classList.remove('hidden'); targetPage.style.display = 'block'; currentPage = pageId; updateNavigationState(pageId); updateHistory(pageId); window.scrollTo({ top: 0, behavior: 'smooth' }); closeMobileMenu(); console.log('Successfully switched to page:', pageId); targetPage.offsetHeight; } else { console.error('Page not found:', 'page-' + pageId); } } function updateNavigationState(activePageId) { const navLinks = document.querySelectorAll('.nav-link[data-page]'); navLinks.forEach(function(link) { link.classList.remove('active'); const linkPage = link.getAttribute('data-page'); if (linkPage === activePageId) { link.classList.add('active'); } }); } function scrollToContact() { console.log('Scrolling to contact'); const contactForm = document.getElementById('contact-form'); if (contactForm) { if (currentPage !== 'home') { showPage('home'); setTimeout(function() { contactForm.scrollIntoView({ behavior: 'smooth' }); }, 300); } else { contactForm.scrollIntoView({ behavior: 'smooth' }); } } closeMobileMenu(); } function setupMobileNavigation() { const navToggle = document.getElementById('navToggle'); const navMenu = document.getElementById('navMenu'); if (!navToggle || !navMenu) { console.log('Mobile nav elements not found'); return; } console.log('Setting up mobile navigation'); navToggle.addEventListener('click', function(e) { e.preventDefault(); e.stopPropagation(); toggleMobileMenu(); }); document.addEventListener('click', function(event) { const isClickInsideNav = navToggle.contains(event.target) || navMenu.contains(event.target); if (!isClickInsideNav && navMenu.classList.contains('active')) { closeMobileMenu(); } }); const mobileNavLinks = navMenu.querySelectorAll('.nav-link'); mobileNavLinks.forEach(function(link) { link.addEventListener('click', function() { setTimeout(closeMobileMenu, 100); }); }); } function toggleMobileMenu() { const navToggle = document.getElementById('navToggle'); const navMenu = document.getElementById('navMenu'); if (!navToggle || !navMenu) { return; } const isActive = navToggle.classList.contains('active'); if (isActive) { closeMobileMenu(); } else { navToggle.classList.add('active'); navMenu.classList.add('active'); } } function closeMobileMenu() { const navToggle = document.getElementById('navToggle'); const navMenu = document.getElementById('navMenu'); if (!navToggle || !navMenu) { return; } navToggle.classList.remove('active'); navMenu.classList.remove('active'); } function setupFormValidation() { const form = document.getElementById('contactForm'); const successMessage = document.getElementById('successMessage'); if (!form || !successMessage) { console.log('Form elements not found'); return; } console.log('Setting up form validation'); form.addEventListener('submit', function (e) { e.preventDefault(); handleFormSubmit(); }); const inputIds = ['firstName', 'lastName', 'email', 'phone', 'message']; inputIds.forEach(function(fieldId) { const inputElement = document.getElementById(fieldId); const errorElement = document.getElementById(fieldId + 'Error'); if (inputElement && errorElement) { inputElement.addEventListener('input', function() { this.classList.remove('error'); errorElement.textContent = ''; errorElement.style.display = 'none'; }); inputElement.addEventListener('blur', function() { validateSingleField(fieldId); }); } }); } function validateSingleField(fieldId) { const input = document.getElementById(fieldId); if (!input) return true; const value = input.value.trim(); let errorMessage = ''; switch(fieldId) { case 'firstName': if (!value) errorMessage = 'Podaj imię.'; break; case 'lastName': if (!value) errorMessage = 'Podaj nazwisko.'; break; case 'email': if (!value) { errorMessage = 'Podaj adres e-mail.'; } else if (!/^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/.test(value)) { errorMessage = 'Podaj poprawny e-mail.'; } break; case 'phone': if (value && !/^([+]?\d{1,3}[\s-]?)?(\d{9,12})$/.test(value.replace(/\s+/g, ''))) { errorMessage = 'Podaj poprawny numer telefonu.'; } break; case 'message': if (!value) { errorMessage = 'Krótko opisz swoją potrzebę.'; } else if (value.length < 10) { errorMessage = 'Opis musi mieć conajmniej 10 znaków.'; } break; } if (errorMessage) { showFieldError(fieldId, errorMessage); return false; } else { clearFieldError(fieldId); return true; } } function handleFormSubmit() { const form = document.getElementById('contactForm'); const successMessage = document.getElementById('successMessage'); if (!form || !successMessage) { return; } console.log('Handling form submit'); const firstName = form.firstName.value.trim(); const lastName = form.lastName.value.trim(); const email = form.email.value.trim(); const phone = form.phone.value.trim(); const message = form.message.value.trim(); const isValid = validateForm(firstName, lastName, email, phone, message); if (isValid) { form.classList.add('hidden'); successMessage.classList.remove('hidden'); successMessage.scrollIntoView({ behavior: 'smooth' }); } } function validateForm(firstName, lastName, email, phone, message) { let isValid = true; clearAllErrors(); if (!validateSingleField('firstName')) isValid = false; if (!validateSingleField('lastName')) isValid = false; if (!validateSingleField('email')) isValid = false; if (!validateSingleField('phone')) isValid = false; if (!validateSingleField('message')) isValid = false; return isValid; } function showFieldError(fieldId, errorMessage) { const errorElement = document.getElementById(fieldId + 'Error'); const inputElement = document.getElementById(fieldId); if (errorElement) { errorElement.textContent = errorMessage; errorElement.style.display = 'block'; errorElement.style.color = 'red'; errorElement.style.fontSize = '14px'; errorElement.style.marginTop = '4px'; } if (inputElement) { inputElement.classList.add('error'); } } function clearFieldError(fieldId) { const errorElement = document.getElementById(fieldId + 'Error'); const inputElement = document.getElementById(fieldId); if (errorElement) { errorElement.textContent = ''; errorElement.style.display = 'none'; } if (inputElement) { inputElement.classList.remove('error'); } } function clearAllErrors() { const errorElements = [ 'firstNameError', 'lastNameError', 'emailError', 'phoneError', 'messageError' ]; errorElements.forEach(function(errorId) { const errorElement = document.getElementById(errorId); if (errorElement) { errorElement.textContent = ''; errorElement.style.display = 'none'; } }); const inputElements = ['firstName', 'lastName', 'email', 'phone', 'message']; inputElements.forEach(function(inputId) { const inputElement = document.getElementById(inputId); if (inputElement) { inputElement.classList.remove('error'); } }); } window.addEventListener('popstate', function(event) { if (event.state && event.state.page) { showPage(event.state.page); } }); function updateHistory(pageId) { const pageTitle = getPageTitle(pageId); const url = window.location.pathname + '#' + pageId; if (history.pushState) { history.pushState({ page: pageId }, pageTitle, url); document.title = pageTitle; } } function getPageTitle(pageId) { const titles = { 'home': 'ERPNext.pl - Darmowy Ekosystem ERP Bez Licencji', 'erpnext': 'ERPNext - Kompletny System ERP | ERPNext.pl', 'crm': 'Frappe CRM - Nowoczesne Zarządzanie Sprzedażą | ERPNext.pl', 'helpdesk': 'Frappe Helpdesk - Profesjonalne Wsparcie Klientów | ERPNext.pl' }; return titles[pageId] || 'ERPNext.pl'; } function checkUrlHash() { const hash = window.location.hash.substring(1); const validPages = ['home', 'erpnext', 'crm', 'helpdesk']; if (validPages.includes(hash)) { showPage(hash); } } function smoothScrollTo(elementId) { const element = document.getElementById(elementId); if (element) { element.scrollIntoView({ behavior: 'smooth' }); } } function openExternalLink(url) { window.open(url, '_blank', 'noopener,noreferrer'); } function addInteractiveEnhancements() { const cards = document.querySelectorAll('.product-card, .module-card, .feature-detailed-card, .package-card'); cards.forEach(function(card) { card.addEventListener('mouseenter', function() { if (!this.style.transform || this.style.transform === 'translateY(0px)') { this.style.transform = 'translateY(-4px)'; } }); card.addEventListener('mouseleave', function() { this.style.transform = 'translateY(0px)'; }); }); } document.addEventListener('DOMContentLoaded', function() { setTimeout(addInteractiveEnhancements, 200); }); document.addEventListener('keydown', function(event) { if (event.key === 'Escape') { closeMobileMenu(); const activeFAQs = document.querySelectorAll('.faq-question.active'); activeFAQs.forEach(function(faq) { const faqAnswer = faq.parentElement.querySelector('.faq-answer'); faq.classList.remove('active'); faqAnswer.classList.remove('active'); }); } if (event.ctrlKey || event.metaKey) { const pages = ['home', 'erpnext', 'crm', 'helpdesk']; const currentIndex = pages.indexOf(currentPage); if (event.key === 'ArrowRight' && currentIndex < pages.length - 1) { event.preventDefault(); showPage(pages[currentIndex + 1]); } else if (event.key === 'ArrowLeft' && currentIndex > 0) { event.preventDefault(); showPage(pages[currentIndex - 1]); } } }); function lazyLoadImages() { const images = document.querySelectorAll('img[data-src]'); if ('IntersectionObserver' in window) { const imageObserver = new IntersectionObserver(function(entries, observer) { entries.forEach(function(entry) { if (entry.isIntersecting) { const img = entry.target; img.src = img.dataset.src; img.removeAttribute('data-src'); imageObserver.unobserve(img); } }); }); images.forEach(function(img) { imageObserver.observe(img); }); } else { images.forEach(function(img) { img.src = img.dataset.src; img.removeAttribute('data-src'); }); } } document.addEventListener('DOMContentLoaded', function() { setTimeout(lazyLoadImages, 100); }); function debugPageVisibility() { const pages = ['home', 'erpnext', 'crm', 'helpdesk']; pages.forEach(function(pageId) { const page = document.getElementById('page-' + pageId); if (page) { const isHidden = page.classList.contains('hidden'); console.log('Page', pageId, '- Hidden:', isHidden); } else { console.error('Page element not found:', 'page-' + pageId); } }); } if (typeof window !== 'undefined') { window.erpNextApp = { showPage: showPage, scrollToContact: scrollToContact, debugPageVisibility: debugPageVisibility, currentPage: function() { return currentPage; } }; } (function setActiveNav(){ try { var path = (location.pathname.split('/').pop() || 'index.html').toLowerCase(); var links = document.querySelectorAll('.nav-menu a.nav-link'); links.forEach(function(link){ var href = (link.getAttribute('href') || '').toLowerCase(); if (href === path || (path === '' && href.endsWith('index.html'))) { link.classList.add('active'); } else { link.classList.remove('active'); } }); } catch(e){} })();